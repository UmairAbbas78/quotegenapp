{"version":3,"sources":["logo.svg","Quote.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Quote","props","react_default","a","createElement","className","id","qoute","author","onClick","changeQuote","target","href","concat","src","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","quotes","setQuotes","_React$useState3","_React$useState4","setAuthor","_React$useState5","_React$useState6","count","changeCount","fetchQuote","_fetchQuote","apply","this","arguments","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","console","log","content","stop","useEffect","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oKCEzB,SAASC,EAAMC,GAC1B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,iBAAiBC,GAAG,aACjCJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQC,GAAG,QAAQL,EAAMM,OACvCL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeC,GAAG,UAAUL,EAAMO,QAChDN,EAAAC,EAAAC,cAAA,UAAQE,GAAG,YAAYG,QAASR,EAAMS,aAAtC,QACAR,EAAAC,EAAAC,cAAA,KAAGO,OAAO,SAASL,GAAG,cAAcM,KAAI,yCAAAC,OAA2CZ,EAAMM,MAAjD,OAAAM,OAA4DZ,EAAMO,SAAUN,EAAAC,EAAAC,cAAA,OAAKU,IAAI,80MCH1H,SAASC,IAAM,IAAAC,EAEDC,IAAMC,SAAS,2GAFdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAErBM,EAFqBH,EAAA,GAEdI,EAFcJ,EAAA,GAAAK,EAGDP,IAAMC,SAAS,sBAHdO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGrBhB,EAHqBiB,EAAA,GAGdC,EAHcD,EAAA,GAAAE,EAIAV,IAAMC,SAAS,GAJfU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAIrBE,EAJqBD,EAAA,GAIfE,EAJeF,EAAA,YAObG,IAPa,OAAAC,EAAAC,MAAAC,KAAAC,WAAA,SAAAH,IAAA,OAAAA,EAAAZ,OAAAgB,EAAA,EAAAhB,CAAAiB,IAAAC,KAO5B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuBC,MAAM,iCAD7B,cACMN,EADNG,EAAAI,KAAAJ,EAAAE,KAAA,EAEmBL,EAASQ,OAF5B,OAEMP,EAFNE,EAAAI,KAGKP,IACDS,QAAQC,IAAIT,EAAKU,SACjBF,QAAQC,IAAIT,EAAKjC,SAEnBe,EAAUkB,EAAKU,SACfzB,EAAUe,EAAKjC,QARjB,wBAAAmC,EAAAS,SAAAb,OAP4BN,MAAAC,KAAAC,WAuB5B,OANAlB,IAAMoC,UAAU,kBAAItB,GAAW,CAACF,IAO9B3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACJ,EAAD,CAAOO,MAASe,EAAQd,OAAUA,EAAQE,YAN9C,WACEoB,EAAYD,EAAM,OCzBtB,IAYeyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC1D,EAAA2D,EAAA,GAAAC,KAAA5D,EAAA6D,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpE,EAAAC,EAAAC,cAACF,EAAAC,EAAMoE,WAAP,KACErE,EAAAC,EAAAC,cAACoE,EAAD,QAOJlB","file":"static/js/main.e17cc4ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\r\n\r\nexport default function Quote(props){\r\n    return(\r\n        <div className = 'QouteContainer' id=\"quote-box\" >\r\n            <h3 className=\"qoute\" id=\"text\">{props.qoute}</h3>\r\n            <h4 className=\"qoute-author\" id=\"author\">{props.author}</h4>\r\n            <button id=\"new-quote\" onClick={props.changeQuote}>Next</button>\r\n            <a target=\"_blank\" id=\"tweet-quote\" href={`https://twitter.com/intent/tweet?text=${props.qoute}\\n-${props.author}`}><img src=\"https://img.icons8.com/fluency/344/stack-of-tweets.png\"/></a>\r\n        </div>\r\n    );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Quote from './Quote';\nimport React from \"react\"\n\nexport default function App() {\n\n  const [quotes,setQuotes] = React.useState(\"It isn't what happens to us that causes us to suffer; it's what we say to ourselves about what happens.\");\n  const [author,setAuthor] = React.useState(\"Pema Chödrön\");\n  const [count,changeCount] = React.useState(0);\n\n  \n  async function fetchQuote(){\n    let response = await fetch('http://api.quotable.io/random');\n    let data = await response.json();\n    if(response){\n      console.log(data.content);\n      console.log(data.author);\n    }\n    setQuotes(data.content);\n    setAuthor(data.author);\n  }\n  React.useEffect(()=>fetchQuote,[count]);\n\n  function click(){    \n    changeCount(count+1);\n  }\n\n  return (\n    <div className=\"App\">\n      <Quote qoute = {quotes} author = {author} changeQuote={click}/>\n    </div>\n  ); \n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}