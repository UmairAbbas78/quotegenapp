{"version":3,"sources":["logo.svg","Quote.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Quote","props","react_default","a","createElement","className","id","qoute","author","onClick","changeQuote","target","href","concat","src","App","fetchQuote","_fetchQuote","apply","this","arguments","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","console","log","content","setQuotes","setAuthor","stop","React","useEffect","quotes","_React$useState","useState","_React$useState2","slicedToArray","_React$useState3","_React$useState4","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oKCEzB,SAASC,EAAMC,GAC1B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,iBAAiBC,GAAG,aACjCJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQC,GAAG,QAAQL,EAAMM,OACvCL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeC,GAAG,UAAUL,EAAMO,QAChDN,EAAAC,EAAAC,cAAA,UAAQE,GAAG,YAAYG,QAASR,EAAMS,aAAtC,QACAR,EAAAC,EAAAC,cAAA,KAAGO,OAAO,SAASL,GAAG,cAAcM,KAAI,yCAAAC,OAA2CZ,EAAMM,MAAjD,OAAAM,OAA4DZ,EAAMO,SACtGN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OAAKU,IAAI,+0MCNd,SAASC,IAAM,SAKbC,IALa,OAAAC,EAAAC,MAAAC,KAAAC,WAAA,SAAAH,IAAA,OAAAA,EAAAI,OAAAC,EAAA,EAAAD,CAAAE,IAAAC,KAK5B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuBC,MAAM,kCAD7B,cACMN,EADNG,EAAAI,KAAAJ,EAAAE,KAAA,EAEmBL,EAASQ,OAF5B,OAEMP,EAFNE,EAAAI,KAGKP,IACDS,QAAQC,IAAIT,EAAKU,SACjBF,QAAQC,IAAIT,EAAKnB,SAEnB8B,EAAUX,EAAKU,SACfE,EAAUZ,EAAKnB,QARjB,wBAAAqB,EAAAW,SAAAf,OAL4BP,MAAAC,KAAAC,WAG5BqB,IAAMC,UAAU,kBAAI1B,GAAW,CAAC2B,IAHJ,IAAAC,EAeDH,IAAMI,SAAS,IAfdC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAuB,EAAA,GAerBD,EAfqBG,EAAA,GAedR,EAfcQ,EAAA,GAAAE,EAgBDP,IAAMI,SAAS,IAhBdI,EAAA5B,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA,GAgBrBxC,EAhBqByC,EAAA,GAgBdV,EAhBcU,EAAA,GAwB5B,OACE/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,2BAEFH,EAAAC,EAAAC,cAACJ,EAAD,CAAOO,MAASoC,EAAQnC,OAAUA,EAAQE,YAT9C,WACEM,QC1BJ,IAYekC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCtD,EAAAuD,EAAA,GAAAC,KAAAxD,EAAAyD,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhE,EAAAC,EAAAC,cAACF,EAAAC,EAAMgE,WAAP,KACEjE,EAAAC,EAAAC,cAACgE,EAAD,QAOJlB","file":"static/js/main.1ca57a19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\r\n\r\nexport default function Quote(props){\r\n    return(\r\n        <div className = 'QouteContainer' id=\"quote-box\" >\r\n            <h3 className=\"qoute\" id=\"text\">{props.qoute}</h3>\r\n            <h4 className=\"qoute-author\" id=\"author\">{props.author}</h4>\r\n            <button id=\"new-quote\" onClick={props.changeQuote}>Next</button>\r\n            <a target=\"_blank\" id=\"tweet-quote\" href={`https://twitter.com/intent/tweet?text=${props.qoute}\\n-${props.author}`}>\r\n                <div className=\"social-button\">\r\n                    <h4>Tweet!</h4>\r\n                    <img src=\"https://img.icons8.com/fluency/344/stack-of-tweets.png\"/>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Quote from './Quote';\nimport React from \"react\"\n\nexport default function App() {\n\n  \n  React.useEffect(()=>fetchQuote,[quotes]);\n  \n  async function fetchQuote(){\n    let response = await fetch('https://api.quotable.io/random');\n    let data = await response.json();\n    if(response){\n      console.log(data.content);\n      console.log(data.author);\n    }\n    setQuotes(data.content);\n    setAuthor(data.author);\n  }\n  const [quotes,setQuotes] = React.useState(\"\");\n  const [author,setAuthor] = React.useState(\"\");\n\n  \n\n  function click(){    \n    fetchQuote();\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"title-section\">\n        <h4 className='title'>Okra's Quote Generator</h4>\n      </div>\n      <Quote qoute = {quotes} author = {author} changeQuote={click}/>\n    </div>\n  ); \n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}